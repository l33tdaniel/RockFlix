{"ast":null,"code":"var _jsxFileName = \"/Users/danielneugent/Desktop/Coding/ClarkClasswork/src/containers/Episodes/Episodes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport EpisodeList from '../../components/EpisodeList/EpisodeList.js';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WrappedEpisodes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodes: [],\n      episodesName: ''\n    };\n  }\n\n  componentDidMount() {\n    const showID = this.props.params.id; // get the title of the show\n    // todo: instead, get the title of the show from further up the chain in series, pass down through props\n\n    fetch(`https://api.tvmaze.com/shows/${showID}`).then(response => response.json()).then(json => this.setState({\n      episodesName: json.name\n    })); // get the episodes of the show\n\n    fetch(`https://api.tvmaze.com/shows/${showID}/episodes`).then(response => response.json()).then(json => this.setState({\n      episodes: json\n    }));\n  }\n\n  render() {\n    const {\n      episodes,\n      episodeName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episodeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EpisodeList, {\n        list: episodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n} // important note - this is the exported function which wraps the above class with hooked props\n\n\nfunction Episodes(props) {\n  _s();\n\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(WrappedEpisodes, { ...props,\n    params: params\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Episodes, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Episodes;\nexport default Episodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episodes\");","map":{"version":3,"sources":["/Users/danielneugent/Desktop/Coding/ClarkClasswork/src/containers/Episodes/Episodes.js"],"names":["React","EpisodeList","useParams","WrappedEpisodes","Component","constructor","props","state","episodes","episodesName","componentDidMount","showID","params","id","fetch","then","response","json","setState","name","render","episodeName","Episodes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,MAAM,GAAG,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,EAAjC,CADgB,CAEhB;AACA;;AACAC,IAAAA,KAAK,CAAE,gCAA+BH,MAAO,EAAxC,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAET,MAAAA,YAAY,EAAEQ,IAAI,CAACE;AAArB,KAAd,CAFd,EAJgB,CAOhB;;AACAL,IAAAA,KAAK,CAAE,gCAA+BH,MAAO,WAAxC,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAES;AAAZ,KAAd,CAFd;AAGH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA,QAAF;AAAYa,MAAAA;AAAZ,QAA4B,KAAKd,KAAvC;AACA,wBACI;AAAA,8BACI;AAAA,kBAAKc;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEb;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA/ByC,C,CAkC9C;;;AACA,SAASc,QAAT,CAAkBhB,KAAlB,EAAyB;AAAA;;AACrB,QAAMM,MAAM,GAAGV,SAAS,EAAxB;AACA,sBAAO,QAAC,eAAD,OAAqBI,KAArB;AAA4B,IAAA,MAAM,EAAEM;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAHQU,Q;UACUpB,S;;;KADVoB,Q;AAKT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport EpisodeList from '../../components/EpisodeList/EpisodeList.js';\nimport { useParams } from \"react-router-dom\";\n\nclass WrappedEpisodes extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            episodes: [],\n            episodesName: ''\n        }\n    }\n\n    componentDidMount() {\n        const showID = this.props.params.id;\n        // get the title of the show\n        // todo: instead, get the title of the show from further up the chain in series, pass down through props\n        fetch(`https://api.tvmaze.com/shows/${showID}`)\n        .then(response => response.json())\n        .then(json => this.setState({ episodesName: json.name }));\n        // get the episodes of the show\n        fetch(`https://api.tvmaze.com/shows/${showID}/episodes`)\n        .then(response => response.json())\n        .then(json => this.setState({ episodes: json }));\n    }\n   \n    render() {\n        const { episodes, episodeName } = this.state;\n        return (\n            <div>\n                <h1>{episodeName}</h1>\n                <hr />\n                <EpisodeList list={episodes} />\n            </div>\n        )\n    }    \n}\n\n// important note - this is the exported function which wraps the above class with hooked props\nfunction Episodes(props) {\n    const params = useParams();\n    return <WrappedEpisodes {...props} params={params} />\n}\n\nexport default Episodes;"]},"metadata":{},"sourceType":"module"}